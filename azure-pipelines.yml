pool:
  name: SelfHosted

trigger:
  branches:
    include:
    - master
    - main
    - develop
  paths:
    exclude:
    - readme.md
    - LICENSE
    - .gitignore

pr: none

schedules:
- cron: "0 0 * * *"
  displayName: Daily build
  branches:
    include:
    - master
    - main
  always: true

resources:
- repo: self

stages:
- stage: Build
  displayName: Check versions
  jobs:
  - job: version
    displayName: Get Latest Version
    steps:
    - bash: |
         URL=`curl -H "user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/88.0.4324.182 Safari/537.36" https://www.minecraft.net/en-us/download/server/bedrock|grep -o "https://minecraft.azureedge.net/bin-linux/bedrock-server-.*.zip"`
         VERSION=`echo $URL|grep -o "[0-9.]*[0-9]"`
         MATCHING=`docker image ls acbca/minecraft-bedrock:*|grep "$VERSION"`
         CREATE=${MATCHING:-true}
         # Store values for use in later stages
         echo "##vso[task.setvariable variable=URL;isOutput=true]$URL"
         echo "##vso[task.setvariable variable=VERSION;isOutput=true]$VERSION"
         echo "##vso[task.setvariable variable=CREATE;isOutput=true]$CREATE"
         echo "URL: $URL"
         echo "VERSION: $VERSION"
         echo "MATCHING: $MATCHING"
         echo "CREATE: $CREATE"
      name: check
  - job: Build_Main
    dependsOn: version
    variables:
      URL: $[ dependencies.version.outputs['check.URL'] ]
      VERSION: $[ dependencies.version.outputs['check.VERSION'] ]
    condition: or(and(eq(variables['Build.Reason'], 'Schedule'), eq(dependencies.version.outputs['check.CREATE'], 'true')), and(eq(variables['Build.Reason'], 'IndividualCI'), eq(variables['Build.SourceBranchName'], 'master')))
    displayName: Build Main
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'
        command: 'login'
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/dockerfile'
        repository: acbca/minecraft-bedrock
        arguments: --build-arg URL=$(URL) --build-arg VERSION=$(VERSION)
        tags: |
          latest
          $(VERSION)
    - task: Docker@2
      displayName: Push image
      inputs:
        command: push
        dockerfile: '$(Build.SourcesDirectory)/dockerfile'
        repository: acbca/minecraft-bedrock
        tags: |
          latest
          $(VERSION)
  - job: Build_Develop
    dependsOn: version
    variables:
      URL: $[ dependencies.version.outputs['check.URL'] ]
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
    displayName: Build Develop
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: 'DockerHub'
        command: 'login'
    - task: Docker@2
      displayName: Build image
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/dockerfile'
        repository: acbca/minecraft-bedrock
        arguments: --build-arg URL=$(URL) --build-arg VERSION=$(VERSION)
        tags: |
          alpha
    - task: Docker@2
      displayName: Push image
      inputs:
        command: push
        dockerfile: '$(Build.SourcesDirectory)/dockerfile'
        repository: acbca/minecraft-bedrock
        tags: |
          alpha
